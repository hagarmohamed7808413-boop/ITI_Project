// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Context;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(MYContext))]
    partial class MYContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Devices, gadgets and more",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Apparel and accessories",
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Various genres and authors",
                            Name = "Books"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Home and office furniture",
                            Name = "Furniture"
                        },
                        new
                        {
                            CategoryId = 5,
                            Description = "Equipment and accessories for sports",
                            Name = "Sports"
                        },
                        new
                        {
                            CategoryId = 6,
                            Description = "Kids toys and educational games",
                            Name = "Toys"
                        },
                        new
                        {
                            CategoryId = 7,
                            Description = "Cosmetics and skincare products",
                            Name = "Beauty"
                        },
                        new
                        {
                            CategoryId = 8,
                            Description = "Food, drinks and household essentials",
                            Name = "Groceries"
                        },
                        new
                        {
                            CategoryId = 9,
                            Description = "Car parts and accessories",
                            Name = "Automotive"
                        },
                        new
                        {
                            CategoryId = 10,
                            Description = "Rings, necklaces, and watches",
                            Name = "Jewelry"
                        });
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Latest smartphone with advanced features",
                            ImagePath = "images/smartphone.jpg",
                            Price = 750.00m,
                            Quantity = 50,
                            Title = "Smartphone X10"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Description = "Comfortable running shoes for all terrains",
                            ImagePath = "images/shoes.jpg",
                            Price = 120.00m,
                            Quantity = 100,
                            Title = "Running Shoes Model A"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 4,
                            Description = "100% cotton casual t-shirt",
                            ImagePath = "images/tshirt.jpg",
                            Price = 25.00m,
                            Quantity = 200,
                            Title = "Cotton T-Shirt"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3,
                            Description = "Outdoor furniture set",
                            ImagePath = "images/chairset.jpg",
                            Price = 180.00m,
                            Quantity = 30,
                            Title = "Garden Chair Set"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 6,
                            Description = "Best-selling sci-fi novel",
                            ImagePath = "images/book.jpg",
                            Price = 15.00m,
                            Quantity = 150,
                            Title = "Science Fiction Novel"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 7,
                            Description = "Noise-cancelling wireless headphones",
                            ImagePath = "images/headphones.jpg",
                            Price = 350.00m,
                            Quantity = 45,
                            Title = "Wireless Headphones"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 8,
                            Description = "Genuine leather jacket",
                            ImagePath = "images/jacket.jpg",
                            Price = 250.00m,
                            Quantity = 60,
                            Title = "Leather Jacket"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 9,
                            Description = "1.5L electric kettle with auto shutoff",
                            ImagePath = "images/kettle.jpg",
                            Price = 40.00m,
                            Quantity = 80,
                            Title = "Electric Kettle"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 1,
                            Description = "Durable mountain bike for off-road adventures",
                            ImagePath = "images/bike.jpg",
                            Price = 500.00m,
                            Quantity = 20,
                            Title = "Mountain Bike"
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 10,
                            Description = "Non-slip yoga mat",
                            ImagePath = "images/yogamat.jpg",
                            Price = 30.00m,
                            Quantity = 120,
                            Title = "Yoga Mat"
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 1,
                            Description = "Fitness tracker and smartwatch",
                            ImagePath = "images/smartwatch.jpg",
                            Price = 280.00m,
                            Quantity = 75,
                            Title = "Smartwatch Z5"
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 2,
                            Description = "Slim fit formal shirt",
                            ImagePath = "images/formalshirt.jpg",
                            Price = 45.00m,
                            Quantity = 90,
                            Title = "Formal Shirt"
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 3,
                            Description = "Non-stick pan set for kitchen",
                            ImagePath = "images/panset.jpg",
                            Price = 120.00m,
                            Quantity = 55,
                            Title = "Cooking Pan Set"
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 1,
                            Description = "Ergonomic wireless mouse",
                            ImagePath = "images/mouse.jpg",
                            Price = 25.00m,
                            Quantity = 130,
                            Title = "Wireless Mouse"
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 5,
                            Description = "Blue denim jeans",
                            ImagePath = "images/jeans.jpg",
                            Price = 60.00m,
                            Quantity = 160,
                            Title = "Jeans"
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 3,
                            Description = "LED desk lamp with adjustable arm",
                            ImagePath = "images/lampe.jpg",
                            Price = 35.00m,
                            Quantity = 70,
                            Title = "Desk Lamp"
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 1,
                            Description = "Portable bluetooth speaker",
                            ImagePath = "images/speaker.jpg",
                            Price = 90.00m,
                            Quantity = 85,
                            Title = "Bluetooth Speaker"
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 2,
                            Description = "Lightweight sports shorts",
                            ImagePath = "images/shorts.jpg",
                            Price = 30.00m,
                            Quantity = 140,
                            Title = "Sports Shorts"
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 5,
                            Description = "Modern wall decoration",
                            ImagePath = "images/wallart.jpg",
                            Price = 150.00m,
                            Quantity = 40,
                            Title = "Wall Art Painting"
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 1,
                            Description = "Track your health and activity",
                            ImagePath = "images/fitnesstracker.jpg",
                            Price = 110.00m,
                            Quantity = 95,
                            Title = "Fitness Tracker"
                        });
                });

            modelBuilder.Entity("Project.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "ahmed.ali@example.com",
                            FirstName = "Ahmed",
                            LastName = "Ali",
                            Password = "123456"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "sara.mohamed@example.com",
                            FirstName = "Sara",
                            LastName = "Mohamed",
                            Password = "password1"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "omar.hassan@example.com",
                            FirstName = "Omar",
                            LastName = "Hassan",
                            Password = "qwerty123"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "layla.ibrahim@example.com",
                            FirstName = "Layla",
                            LastName = "Ibrahim",
                            Password = "mypassword"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "youssef.fahmy@example.com",
                            FirstName = "Youssef",
                            LastName = "Fahmy",
                            Password = "abc123"
                        },
                        new
                        {
                            UserId = 6,
                            Email = "mona.kamel@example.com",
                            FirstName = "Mona",
                            LastName = "Kamel",
                            Password = "pass1234"
                        },
                        new
                        {
                            UserId = 7,
                            Email = "khaled.saeed@example.com",
                            FirstName = "Khaled",
                            LastName = "Saeed",
                            Password = "securepass"
                        },
                        new
                        {
                            UserId = 8,
                            Email = "aya.mostafa@example.com",
                            FirstName = "Aya",
                            LastName = "Mostafa",
                            Password = "password123"
                        },
                        new
                        {
                            UserId = 9,
                            Email = "islam.nabil@example.com",
                            FirstName = "Islam",
                            LastName = "Nabil",
                            Password = "mypwd321"
                        },
                        new
                        {
                            UserId = 10,
                            Email = "dina.mahmoud@example.com",
                            FirstName = "Dina",
                            LastName = "Mahmoud",
                            Password = "pass2025"
                        });
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.HasOne("Project.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Project.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
